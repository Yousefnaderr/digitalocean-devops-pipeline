name: Backend CI - Build, Test & Security Scan

on:
  push:
    branches: ["*"]
    paths:
      - "package.json"
      - "pnpm-lock.yaml"
      - "src/**"
      - "test/**"
      - "Dockerfile"
      - "tsconfig.json"
      - "tsconfig.build.json"

  pull_request:
    branches: [main]
    paths:
      - "package.json"
      - "pnpm-lock.yaml"
      - "src/**"
      - "test/**"
      - "Dockerfile"
      - "tsconfig.json"
      - "tsconfig.build.json"

jobs:
  build-test:
    name: Build & Test (Backend)
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build

      - name: Run unit tests
        run: pnpm run test

      - name: Run e2e tests
        run: pnpm run test:e2e
        continue-on-error: true

      - name: Run coverage
        run: pnpm run test:cov
        continue-on-error: true

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: dist/

      - name: Notify Slack (Build/Test Success)
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\":white_check_mark: *Backend CI Succeeded!* ✅\n• Repo: *${{ github.repository }}*\n• Branch: *${{ github.ref_name }}*\n• Actor: *${{ github.actor }}*\n• Run: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack (Build/Test Failed)
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\":x: *Backend CI Failed!* ❌\n• Repo: *${{ github.repository }}*\n• Branch: *${{ github.ref_name }}*\n• Actor: *${{ github.actor }}*\n• Logs: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  security-scan:
    name: Snyk Security Scan (Backend)
    runs-on: ubuntu-latest
    needs: build-test
    timeout-minutes: 10
    if: success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
        continue-on-error: true

      - name: Notify Slack (Snyk Success)
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\":shield: *Backend Snyk Scan Passed!* ✅\n• Repo: *${{ github.repository }}*\n• Branch: *${{ github.ref_name }}*\n• Run: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Report>\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack (Snyk Failed)
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\":warning: *Backend Snyk Scan Failed!* ⚠️\nCheck logs: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}

